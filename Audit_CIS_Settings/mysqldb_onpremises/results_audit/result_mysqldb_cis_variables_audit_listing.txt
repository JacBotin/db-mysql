name_variable	cis_category	description_variable	value_variable	diagnostic	action_cmd
log_error_verbosity	Auditing and Logging	The log_error_verbosity system variable provides additional information to the MySQL log. A value of 1 enables logging of error messages. A value of 2 enables logging of error and warning messages, and a value of 3 enables logging of error, warning and note messages.	3	OK - log_error_verbosity 3 enables logging of error, warning and note messages	no action needed
log_error	Auditing and Logging	The error log contains information about events such as mysqld starting and stopping, when a table needs to be checked or repaired, and, depending on the host operating system, stack traces when mysqld fails.	/var/log/mysql/error.log	OK - log_error is writes the erros log to the file defined	no action needed
audit_log	Auditing and Logging	Password complexity includes password characteristics such as length, case, length, and character sets. This recommendation prevents users from choosing weak passwords which can easily be guessed. 	NULL	NOK - Policies security password is not installed	/* Run script mysqldb_cis_install_audit_log.sql */
datadir	File System Permissions	It is generally accepted that host operating systems should include different filesystem partitions for different purposes.  One set of filesystems are typically called system partitions, and are generally reserved for host system/application operation. The other set of filesystems are typically called non-system partitions, and such locations are generally reserved for storing data.	/var/lib/mysql/	OK_NOK - Check location and access control	set global datadir = '/$path/datafiles/data';
log_bin_basename	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes.  These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user.	NULL	OK_NOK - Check location and access control. Choose a location other than /var and/ usr or root	set global log_bin_basename = '/$path/binlogs/mysql_bin';
slow_query_log	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes.  These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user	0	OK - slow_query_log is disable	no action needed
slow_query_log_file	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes. These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user	/var/lib/mysql/5QZNQX2-slow.log	OK_NOK - Check directory and file access control configured in the variable slow_query_log_file. A safe directory different from the system is recommended.	no action needed
relay_log_basename	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes.  These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user	/var/lib/mysql/5QZNQX2-relay-bin	OK_NOK - Check directory and access control configured in the variable relay_log_basename	SET GLOBAL relay_log_basename = '/$path/binlogs/relay_bin';
general_log	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes.  These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user	0	OK - general_log is disable. Check access control directory and file defined in general_log_file variable	Check access control directory and file defined in general_log_file variable
general_log_file	File System Permissions	MySQL can operate using a variety of log files, each used for different purposes.  These are the binary log, error log, slow query log, relay log, and general log.  Because these are files on the host operating system, they are subject to the permissions structure provided by the host and may be accessible by users other than the MySQL user	/var/lib/mysql/5QZNQX2.log	OK_NOK - Check directory and access control configured in the variable general_log_file	SET GLOBAL general_log_file = '/$path/logs/mysql_general.log';
local_infile	General	The local_infile parameter dictates whether files located on the MySQL clients computer can be loaded or selected via LOAD DATA INFILE or SELECT local_file	1	NOK - local_infile is enable. Check directory and access control configured in the variable secure_file_priv 	set global local_infile = 'OFF';
daemon_memcached	General	The InnoDB memcached Plugin allows users to access data stored in InnoDB with the memcached protocol. By default the plugin doesnt do authentication, which means that anyone with access to the TCP/IP port of the plugin can access and modify the data.	NULL	OK - The InnoDB memcached Plugin is not installed	no action needed
secure_file_priv	General	The secure_file_priv option restricts to paths used by LOAD DATA INFILE or SELECT local_file. It is recommended that this option be set to a file system location that contains only resources expected to be loaded by MySQL	/var/lib/mysql-files/	OK - Just check the directory access control 	set global secure_file_priv = '/$path/backup';
File_priv	MySql Permissions	The File_priv privilege found in the mysql.user table is used to allow or disallow a user from reading and writing files on the server host.	Y	NOK - The File_priv privilege is enabled for common users	select user, host from mysql.user where File_priv = 'Y';/* update mysql.user set file_priv = 'N' where user = $user and host = $host;*/
Super_priv	MySql Permissions	The SUPER privilege found in the mysql.user table governs the use of a variety of MySQL features. These features include, CHANGE MASTER TO, KILL, mysqladmin kill option, PURGE BINARY LOGS, SET GLOBAL, mysqladmin debug option, logging control, and more	Y	NOK - The super_priv privilege is enabled for common users	select user, host from mysql.user where super_priv = 'Y';/* update mysql.user set file_priv = 'N', plugin = 'mysql_native_password' where user = $user and host = $host;*/
shutdown_priv	MySql Permissions	The SHUTDOWN privilege simply enables use of the shutdown option to the mysqladmin command, which allows a user with the SHUTDOWN privilege the ability to shut down the MySQL server.	Y	NOK - The shutdown privilege is enabled for common users	select user, host from mysql.user where shutdown_priv = 'Y';/* update mysql.user set shutdown_priv = 'N', plugin = 'mysql_native_password' where user = $user and host = $host;*/
create_user_priv	MySql Permissions	The CREATE USER privilege governs the right of a given user to add or remove users, change existing users names, or revoke existing users privileges.	Y	NOK - The create_user_priv privilege is enabled for common users	select user, host from mysql.user where create_user_priv = 'Y';/* update mysql.user set create_user_priv = 'N', plugin = 'mysql_native_password' where user = $user and host = $host;*/
grant_priv	MySql Permissions	The GRANT OPTION privilege exists in different contexts (mysql.user, mysql.db) for the purpose of governing the ability of a privileged user to manipulate the privileges of other users names, or revoke existing users privileges.	Y	NOK - The create_user_priv privilege is enabled for common users	select user, host from mysql.user where grant_priv = 'Y';/* update mysql.user set grant_priv = 'N', plugin = 'mysql_native_password' where user = $user and host = $host;*/
repl_slave_priv	MySql Permissions	The REPLICATION SLAVE privilege governs whether a given user (in the context of the master server) can request updates that have been made on the master server names, or revoke existing users privileges.	Y	NOK - The repl_slave_priv privilege is enabled for common users	select user, host from mysql.user where repl_slave_priv = 'Y';/* update mysql.user set repl_slave_priv = 'N', plugin = 'mysql_native_password' where user = $user and host = $host;*/
grant_all	MySQL Permissions	It is necessary to ensure that only administrative users have full access to the database		NOK - There are users commons have all privileges. Check.	SELECT USER, HOST FROM mysql.user WHERE ((Select_priv = 'Y') OR (Insert_priv = 'Y') OR (Update_priv = 'Y') OR (Delete_priv = 'Y') OR (Create_priv = 'Y') OR (Drop_priv = 'Y')) and user <> 'root';/* UPDATE mysql.user SET Drop_priv = 'N' where user = $user and host = $host;*/
sql_mode	Authentication	NO_AUTO_CREATE_USER is an option for sql_mode that prevents a GRANT statement from automatically creating a user when authentication information is not provide.	ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION	OK -  no_auto_create_user is set in sql_mode	no action needed
password_blank	Authentication	A user can create a blank password. Having a blank password is risky as anyone can just assume the user’s identity, enter the user’s loginID and connect to the server. This bypasses authentication, which is bad.		OK - No user has no password set	no action needed
mysql_native_password	Authentication	The mysql_native_password is the traditional method of authentication		OK - All users are using the recommended password policy mysql_native_password	no action needed
anonymous accounts	Authentication	Users can have an anonymous (empty or blank) username. These anonymous usernames have no passwords and any other user can use that anonymous username to connect to the MySQL server. Removal of these anonymous accounts ensures only identified and trusted users can access the MySQL server		OK - No user is configured with anonymous usernames	no action needed
wildcard_host	Authentication	Users with wildcard hostnames (%) are granted permission to any location. It is best to avoid creating wildcard hostnames. Instead, create users and give them specific locations from which a given user may connect to and interact with the database.	%	OK - No user is configured with wildcard hostname	no action needed
old_passwords	Authentication	The purpose of the old_passwords system variable is to permit backward compatibility with pre-4.1 clients under circumstances where the server would otherwise generate long password hashes	0	OK - 0 the authenticate with the mysql_native_password. Recommended.	no action needed
secure_auth	Authentication	If this variable is enabled, the server blocks connections by clients that attempt to use accounts that have passwords stored in the old (pre-4.1) format. Enable this variable to prevent all use of passwords employing the old format (and hence insecure communication over the network).	1	OK - 1 is ON - The server blocks passwords in old formats	no action needed
validate_password	Authentication	Password complexity includes password characteristics such as length, case, length, and character sets. This recommendation prevents users from choosing weak passwords which can easily be guessed. 	NULL	NOK - Policies security password is not installed	INSTALL PLUGIN validate_password SONAME 'validate_password.so'; /* Run script mysqldb_set_validate_password.sql*/
default_password_lifetime	Authentication	Password expiry for specific users provides user passwords with a unique time bounded lifetime.	0	NOK - Control of requires password change every 90 days is NOT defined	SET GLOBAL default_password_lifetime=90;
have_ssl	Network	All network traffic must use SSL/TLS when traveling over untrusted networks.	YES	OK - Secure Sockets Layer is enable	no action needed
ssl_type	Network	All network traffic must use SSL / TLS when traveling over untrusted networks. SSL / TLS must be enforced per user for users entering the system through the net		OK - All business users have an SSL certificate set	no action needed
master_info_repository	Replication	The master_info_repository setting determines to where a slave logs master status and connection information. The options are FILE or TABLE.	FILE	NOK - The configuration is not set for TABLE. FILE is not the recommended safe way.	set global master_info_repository = 'TABLE';
MASTER_SSL_VERIFY_SERVER_CERT	Replication	In the MySQL slave context the setting MASTER_SSL_VERIFY_SERVER_CERT indicates whether the slave should verify the masters certificate. This configuration item may be set to Yes or No, and unless SSL has been enabled on the slave the value will be ignored.	NULL	NOK - Use of SSL certificate for authentication between master / slave is NOT defined	STOP SLAVE; CHANGE MASTER TO MASTER_SSL_VERIFY_SERVER_CERT=1; START SLAVE;
